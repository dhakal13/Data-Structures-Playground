import tkinter as tk
from tkinter import ttk, messagebox

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_head(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        return f"Inserted {data} at head"

    def insert_at_end(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return f"Inserted {data} at tail"
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node
        return f"Inserted {data} at tail"

    def delete_at_head(self):
        if not self.head:
            return "List is empty"
        data = self.head.data
        self.head = self.head.next
        return f"Deleted {data} from head"

    def delete_at_tail(self):
        if not self.head:
            return "List is empty"
        if not self.head.next:
            data = self.head.data
            self.head = None
            return f"Deleted {data} from tail"
        current = self.head
        while current.next.next:
            current = current.next
        data = current.next.data
        current.next = None
        return f"Deleted {data} from tail"

    def display(self):
        elements = []
        current = self.head
        while current:
            elements.append(str(current.data))
            current = current.next
        return " -> ".join(elements) if elements else "[]"

class LinkedListApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Singly Linked List GUI")
        self.linked_list = SinglyLinkedList()

        self.entry = ttk.Entry(root, width=20)
        self.entry.pack(pady=10)

        ttk.Button(root, text="Insert at Head", command=self.insert_head).pack(pady=2)
        ttk.Button(root, text="Insert at Tail", command=self.insert_tail).pack(pady=2)
        ttk.Button(root, text="Delete at Head", command=self.delete_head).pack(pady=2)
        ttk.Button(root, text="Delete at Tail", command=self.delete_tail).pack(pady=2)

        self.display_label = ttk.Label(root, text="[]", font=("Courier", 12))
        self.display_label.pack(pady=10)

    def update_display(self):
        self.display_label.config(text=self.linked_list.display())

    def insert_head(self):
        val = self.entry.get()
        if val:
            msg = self.linked_list.insert_at_head(val)
            self.update_display()
            messagebox.showinfo("Info", msg)

    def insert_tail(self):
        val = self.entry.get()
        if val:
            msg = self.linked_list.insert_at_end(val)
            self.update_display()
            messagebox.showinfo("Info", msg)

    def delete_head(self):
        msg = self.linked_list.delete_at_head()
        self.update_display()
        messagebox.showinfo("Info", msg)

    def delete_tail(self):
        msg = self.linked_list.delete_at_tail()
        self.update_display()
        messagebox.showinfo("Info", msg)

# To run the GUI
if __name__ == "__main__":
    root = tk.Tk()
    app = LinkedListApp(root)
    root.mainloop()
